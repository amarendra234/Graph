class Solution {
public:
   void dfs(vector<vector<char>>& board,int i,int j,int row,int col){
      if(i<0 or i>=row or j<0 or j>=col or board[i][j]=='X' or board[i][j]=='p'){
          return;
      }
      int x[]={-1,1,0,0};
      int y[]={0,0,-1,1};
      board[i][j]='p';
      for(int k=0;k<=3;k++){
          dfs(board,i+x[k],j+y[k],row,col);
      }
   }
    void solve(vector<vector<char>>& board) {
        int row=board.size();
        int col=board[0].size();
        for(int i=0;i<row;i++){
            for(int j=0;j<col;j++){
                if(board[i][j]=='O'){
                    if(i==0 or i==row-1 or j==0 or j==col-1){
                        dfs(board,i,j,row,col);
                    }
                }
            }
        }
        for(int i=0;i<row;i++){
            for(int j=0;j<col;j++){
                if(board[i][j]=='O'){
                    board[i][j]='X';
                }else if(board[i][j]=='p'){
                    board[i][j]='O';
                }
            }
        }
        return;
    }
};
