#include <bits/stdc++.h> 
void toposort(vector<int>adj[],int src,bool visited[],stack<int>&st){
    visited[src]=true;
    for(auto nbr:adj[src]){
        if(!visited[nbr]){
            toposort(adj,nbr,visited,st);
        }
    }
    st.push(src);
}
vector<int> topologicalSort(vector<vector<int>> &edges, int v, int e)  {
    bool visited[v];
    vector<int>ans;
    stack<int>st;
    vector<int>adj[v];
    for(int i=0;i<v;i++){
        visited[i]=false;
    }
    for(int i=0;i<edges.size();i++){
        int u=edges[i][0];
        int v=edges[i][1];
        adj[u].push_back(v);
    }
    for(int i=0;i<v;i++){
        if(!visited[i]){
            toposort(adj,i,visited,st);
        }
    }
    while(!st.empty()){
        ans.push_back(st.top());
        st.pop();
    }
    return ans;
}
