//{ Driver Code Starts
// Initial Template for C++

#include <bits/stdc++.h>
using namespace std;

// } Driver Code Ends
// User function Template for C++
class Solution {
  public:
    vector<int> shortestPath(vector<vector<int>>& edges, int N,int M, int src){
        // code here
        vector<int>adj[N];
        vector<int>dist(N,-1);
        for(int i=0;i<edges.size();i++){
            int u=edges[i][0];
            int v=edges[i][1];
            adj[u].push_back(v);
            adj[v].push_back(u);
        }
        vector<bool>vis(N,false);
        queue<pair<int,int>>q;
        q.push({src,0});
        vis[src]=true;
        dist[src]=0;
        while(q.size()>0){
            int node=q.front().first;
            int d=q.front().second;
            q.pop();
            //dist[src]=d;
            for(auto nbr:adj[node]){
                if(!vis[nbr]){
                    q.push({nbr,d+1});
                    vis[nbr]=true;
                    dist[nbr]=d+1;
                }
            }
        }
        return dist;
    }
};
